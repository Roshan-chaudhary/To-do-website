{"ast":null,"code":"var _jsxFileName = \"/home/subba/1. Project/2. Blog-website AUTH/client/src/components/Blog.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Blog() {\n  _s();\n\n  const [users, setUsers] = useState([]);\n  const [render, setRender] = useState(false);\n  const [inputs, setInputs] = useState({\n    title: \"\",\n    des: \"\",\n    active: false // Default to false\n\n  });\n  const [image, setImage] = useState();\n  const [updateId, setUpdateId] = useState(null); // State to store the ID of the post being updated\n\n  useEffect(() => {\n    const getAllUsers = async () => {\n      try {\n        const getAllData = await axios.get(\"http://localhost:8007/users\");\n        setUsers(getAllData.data);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    getAllUsers();\n  }, [render]);\n  const formdata = new FormData();\n  formdata.append(\"title\", inputs.title);\n  formdata.append(\"des\", inputs.des);\n  formdata.append(\"image\", image);\n  formdata.append(\"active\", inputs.active); // Append active status to form data\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    try {\n      if (updateId) {\n        // If updateId exists, it's an update operation\n        await axios.put(`http://localhost:8007/users/update/${updateId}`, formdata);\n        alert(\"Post updated successfully!\");\n      } else {\n        // If updateId is null, it's a post operation\n        await axios.post(\"http://localhost:8007/users\", formdata);\n        alert(\"Post created successfully!\");\n      }\n\n      setRender(!render); // Toggle render to refresh user data\n\n      setInputs({\n        title: \"\",\n        des: \"\",\n        active: false\n      });\n      setImage(null);\n      setUpdateId(null); // Reset updateId after operation\n    } catch (error) {\n      console.log(error);\n      alert(error);\n    }\n  };\n\n  const handleActiveChange = e => {\n    setInputs({ ...inputs,\n      active: e.target.checked\n    });\n  };\n\n  const handleDelete = async id => {\n    try {\n      await axios.delete(`http://localhost:8007/users/${id}`);\n      setRender(!render); // Refresh user data after deletion\n    } catch (error) {\n      console.log(error);\n      alert(error);\n    }\n  };\n\n  const handleUpdate = id => {\n    const updateUser = users.find(user => user._id === id);\n    setInputs({\n      title: updateUser.title,\n      des: updateUser.des,\n      active: updateUser.active\n    });\n    setUpdateId(id); // Set the ID of the post being updated\n  };\n\n  const handleRefresh = () => {\n    window.location.reload(); // Refresh the page\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit,\n          encType: \"multipart/form-data\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"exampleInputEmail1\",\n              className: \"form-label\",\n              children: \"Title\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: inputs.title,\n              onChange: e => setInputs({ ...inputs,\n                [e.target.name]: e.target.value\n              }),\n              name: \"title\",\n              className: \"form-control\",\n              id: \"exampleInputEmail1\",\n              \"aria-describedby\": \"emailHelp\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"exampleInputPassword1\",\n              className: \"form-label\",\n              children: \"Description\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: inputs.des,\n              onChange: e => setInputs({ ...inputs,\n                [e.target.name]: e.target.value\n              }),\n              name: \"des\",\n              className: \"form-control\",\n              id: \"exampleInputPassword1\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"exampleInputPassword1\",\n              className: \"form-label\",\n              children: \"Image\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"file\",\n              onChange: e => setImage(e.target.files[0]),\n              name: \"image\",\n              className: \"form-control\",\n              id: \"exampleInputPassword1\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-3 form-check\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              className: \"form-check-input\",\n              id: \"activeCheckbox\",\n              checked: inputs.active,\n              onChange: handleActiveChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"form-check-label\",\n              htmlFor: \"activeCheckbox\",\n              children: \"Active\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"btn btn-primary\",\n            children: updateId ? 'Update' : 'Submit'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \" mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn \",\n            onClick: handleRefresh,\n            children: \"Back Page\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 13\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-6\",\n        children: /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"table\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                scope: \"col\",\n                children: \"Title\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 119,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                scope: \"col\",\n                children: \"Description\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 120,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                scope: \"col\",\n                children: \"Date\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 121,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                scope: \"col\",\n                children: \"Status\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 122,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                scope: \"col\",\n                children: \"Image\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 123,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                scope: \"col\",\n                children: \"Actions\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 124,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: users && users.map(user => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: user.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 130,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: user.des\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 131,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: user.date\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 132,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: user.active\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 133,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  className: \"img img-fluid\",\n                  src: `http://localhost:8007/${user.image}`,\n                  alt: \"users\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 134,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 134,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"btn btn-danger\",\n                  onClick: () => handleDelete(user._id),\n                  children: \"Delete\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 136,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"btn btn-primary\",\n                  onClick: () => handleUpdate(user._id),\n                  children: \"Update\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 137,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 135,\n                columnNumber: 19\n              }, this)]\n            }, user._id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Blog, \"fuhr0lURwQzdsCBUcXAkSlbTr28=\");\n\n_c = Blog;\nexport default Blog;\n\nvar _c;\n\n$RefreshReg$(_c, \"Blog\");","map":{"version":3,"sources":["/home/subba/1. Project/2. Blog-website AUTH/client/src/components/Blog.jsx"],"names":["React","useEffect","useState","axios","Blog","users","setUsers","render","setRender","inputs","setInputs","title","des","active","image","setImage","updateId","setUpdateId","getAllUsers","getAllData","get","data","error","console","log","formdata","FormData","append","handleSubmit","e","preventDefault","put","alert","post","handleActiveChange","target","checked","handleDelete","id","delete","handleUpdate","updateUser","find","user","_id","handleRefresh","window","location","reload","name","value","files","map","date"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\n\nfunction Blog() {\n  const [users, setUsers] = useState([]);\n  const [render, setRender] = useState(false);\n  const [inputs, setInputs] = useState({\n    title: \"\",\n    des: \"\",\n    active: false // Default to false\n  });\n  const [image, setImage] = useState();\n  const [updateId, setUpdateId] = useState(null); // State to store the ID of the post being updated\n\n  useEffect(() => {\n    const getAllUsers = async () => {\n      try {\n        const getAllData = await axios.get(\"http://localhost:8007/users\");\n        setUsers(getAllData.data);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    getAllUsers();\n  }, [render]);\n\n  const formdata = new FormData();\n  formdata.append(\"title\", inputs.title);\n  formdata.append(\"des\", inputs.des);\n  formdata.append(\"image\", image);\n  formdata.append(\"active\", inputs.active); // Append active status to form data\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    try {\n      if (updateId) {\n        // If updateId exists, it's an update operation\n        await axios.put(`http://localhost:8007/users/update/${updateId}`, formdata);\n        alert(\"Post updated successfully!\");\n      } else {\n        // If updateId is null, it's a post operation\n        await axios.post(\"http://localhost:8007/users\", formdata);\n        alert(\"Post created successfully!\");\n      }\n      setRender(!render); // Toggle render to refresh user data\n      setInputs({\n        title: \"\",\n        des: \"\",\n        active: false\n      });\n      setImage(null);\n      setUpdateId(null); // Reset updateId after operation\n    } catch (error) {\n      console.log(error);\n      alert(error);\n    }\n  };\n\n  const handleActiveChange = (e) => {\n    setInputs({ ...inputs, active: e.target.checked });\n  };\n\n  const handleDelete = async (id) => {\n    try {\n      await axios.delete(`http://localhost:8007/users/${id}`);\n      setRender(!render); // Refresh user data after deletion\n    } catch (error) {\n      console.log(error);\n      alert(error);\n    }\n  };\n\n  const handleUpdate = (id) => {\n    const updateUser = users.find(user => user._id === id);\n    setInputs({\n      title: updateUser.title,\n      des: updateUser.des,\n      active: updateUser.active\n    });\n    setUpdateId(id); // Set the ID of the post being updated\n  };\n\n  const handleRefresh = () => {\n    window.location.reload(); // Refresh the page\n  };\n\n  return (\n    <div className=\"container\">\n      <div className=\"row\">\n        <div className=\"col-md-6\">\n          <form onSubmit={handleSubmit} encType=\"multipart/form-data\">\n            <div className=\"mb-3\">\n              <label htmlFor=\"exampleInputEmail1\" className=\"form-label\">Title</label>\n              <input type=\"text\" value={inputs.title} onChange={(e) => setInputs({ ...inputs, [e.target.name]: e.target.value })} name=\"title\" className=\"form-control\" id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\" />\n            </div>\n            <div className=\"mb-3\">\n              <label htmlFor=\"exampleInputPassword1\" className=\"form-label\">Description</label>\n              <input type=\"text\" value={inputs.des} onChange={(e) => setInputs({ ...inputs, [e.target.name]: e.target.value })} name='des' className=\"form-control\" id=\"exampleInputPassword1\" />\n            </div>\n            <div className=\"mb-3\">\n              <label htmlFor=\"exampleInputPassword1\" className=\"form-label\">Image</label>\n              <input type=\"file\" onChange={(e) => setImage(e.target.files[0])} name=\"image\" className=\"form-control\" id=\"exampleInputPassword1\" />\n            </div>\n            <div className=\"mb-3 form-check\">\n              <input type=\"checkbox\" className=\"form-check-input\" id=\"activeCheckbox\" checked={inputs.active} onChange={handleActiveChange} />\n              <label className=\"form-check-label\" htmlFor=\"activeCheckbox\">Active</label>\n            </div>\n            <button type=\"submit\" className=\"btn btn-primary\">{updateId ? 'Update' : 'Submit'}</button>\n          </form>\n          <div className=\" mb-3\">\n            <button className=\"btn \" onClick={handleRefresh}>Back Page</button> {/* Button to refresh page */}\n          </div>\n        </div>\n    \n        <div className=\"col-md-6\">\n          <table className=\"table\">\n            <thead>\n              <tr>\n                <th scope=\"col\">Title</th>\n                <th scope=\"col\">Description</th>\n                <th scope=\"col\">Date</th>\n                <th scope=\"col\">Status</th>\n                <th scope=\"col\">Image</th>\n                <th scope=\"col\">Actions</th>\n              </tr>\n            </thead>\n            <tbody>\n              {users && users.map((user) => (\n                <tr key={user._id}>\n                  <td>{user.title}</td>\n                  <td>{user.des}</td>\n                  <td>{user.date}</td>\n                  <td>{user.active}</td>\n                  <td><img className=\"img img-fluid\" src={`http://localhost:8007/${user.image}`} alt=\"users\" /></td>\n                  <td>\n                    <button className=\"btn btn-danger\" onClick={() => handleDelete(user._id)}>Delete</button>\n                    <button className=\"btn btn-primary\" onClick={() => handleUpdate(user._id)}>Update</button>\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Blog;\n"]},"metadata":{},"sourceType":"module"}