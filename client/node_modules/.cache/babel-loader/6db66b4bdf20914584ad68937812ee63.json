{"ast":null,"code":"var _jsxFileName = \"/home/subba/1. Project/2. Blog-website (copy)/client/src/components/Blog.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Blog() {\n  _s();\n\n  const [users, setUsers] = useState([]);\n  const [render, setRender] = useState(false);\n  const [inputs, setInputs] = useState({\n    title: \"\",\n    des: \"\"\n  });\n  const [updateId, setUpdateId] = useState(null); // State to store the ID of the post being updated\n\n  useEffect(() => {\n    const getAllUsers = async () => {\n      try {\n        const getAllData = await axios.get(\"http://localhost:8002/usersapi\");\n        setUsers(getAllData.data);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    getAllUsers();\n  }, [render]);\n  const formdata = new FormData();\n  formdata.append(\"title\", inputs.title);\n  formdata.append(\"des\", inputs.des); // Append active status to form data\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    try {\n      if (updateId) {\n        // If updateId exists, it's an update operation\n        await axios.put(`http://localhost:8002/users/update/${updateId}`, formdata);\n        alert(\"Post updated successfully!\");\n      } else {\n        // If updateId is null, it's a post operation\n        await axios.post(\"http://localhost:8002/users\", formdata);\n        alert(\"Post created successfully!\");\n      }\n\n      setRender(!render); // Toggle render to refresh user data\n\n      setInputs({\n        title: \"\",\n        des: \"\"\n      });\n      setUpdateId(null); // Reset updateId after operation\n    } catch (error) {\n      console.log(error);\n      alert(error);\n    }\n  };\n\n  const handleDelete = async id => {\n    try {\n      await axios.delete(`http://localhost:8002/users/${id}`);\n      setRender(!render); // Refresh user data after deletion\n    } catch (error) {\n      console.log(error);\n      alert(error);\n    }\n  };\n\n  const handleUpdate = id => {\n    const updateUser = users.find(user => user._id === id); // Set active to true if it's falsy\n\n    setInputs({\n      title: updateUser.title,\n      des: updateUser.des\n    }); // Update the image state as well\n\n    setUpdateId(id); // Set the ID of the post being updated\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-center text-3xl font-bold my-10  \",\n      children: \"Task Manager\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-6\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit,\n          encType: \"multipart/form-data\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"exampleInputEmail1\",\n              className: \"form-label\",\n              children: \"Title\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: inputs.title,\n              onChange: e => setInputs({ ...inputs,\n                [e.target.name]: e.target.value\n              }),\n              name: \"title\",\n              className: \"form-control\",\n              id: \"exampleInputEmail1\",\n              \"aria-describedby\": \"emailHelp\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"exampleInputPassword1\",\n              className: \"form-label  \",\n              children: \"Description\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n              type: \"text\",\n              value: inputs.des,\n              onChange: e => setInputs({ ...inputs,\n                [e.target.name]: e.target.value\n              }),\n              name: \"des\",\n              className: \"form-control\",\n              id: \"exampleInputPassword1\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"btn btn-primary\",\n            children: updateId ? 'Update' : 'Submit'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-6\",\n        children: /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"table\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                scope: \"col\",\n                children: \"Date\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 108,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                scope: \"col\",\n                children: \"Title\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 109,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                scope: \"col\",\n                children: \"Description\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 110,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                scope: \"col\",\n                children: \"Actions\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 111,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: users && users.map(user => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: user.date\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 117,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: user.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 118,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: user.des\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 119,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"btn btn-danger\",\n                  onClick: () => handleDelete(user._id),\n                  children: \"Delete\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 122,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"btn btn-primary\",\n                  onClick: () => handleUpdate(user._id),\n                  children: \"Update\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 123,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 121,\n                columnNumber: 19\n              }, this)]\n            }, user._id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Blog, \"+pJP5VzdKkM9H6AFKf9ttpNlckE=\");\n\n_c = Blog;\nexport default Blog;\n\nvar _c;\n\n$RefreshReg$(_c, \"Blog\");","map":{"version":3,"sources":["/home/subba/1. Project/2. Blog-website (copy)/client/src/components/Blog.jsx"],"names":["React","useEffect","useState","axios","Blog","users","setUsers","render","setRender","inputs","setInputs","title","des","updateId","setUpdateId","getAllUsers","getAllData","get","data","error","console","log","formdata","FormData","append","handleSubmit","e","preventDefault","put","alert","post","handleDelete","id","delete","handleUpdate","updateUser","find","user","_id","target","name","value","map","date"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\n\nfunction Blog() {\n  const [users, setUsers] = useState([]);\n  const [render, setRender] = useState(false);\n  const [inputs, setInputs] = useState({\n    title: \"\",\n    des: \"\",\n    \n  });\n  \n  const [updateId, setUpdateId] = useState(null); // State to store the ID of the post being updated\n\n  useEffect(() => {\n    const getAllUsers = async () => {\n      try {\n        const getAllData = await axios.get(\"http://localhost:8002/usersapi\");\n        setUsers(getAllData.data);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    getAllUsers();\n  }, [render]);\n\n  const formdata = new FormData();\n  formdata.append(\"title\", inputs.title);\n  formdata.append(\"des\", inputs.des);\n  \n   // Append active status to form data\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    try {\n      if (updateId) {\n        // If updateId exists, it's an update operation\n        await axios.put(`http://localhost:8002/users/update/${updateId}`, formdata);\n        alert(\"Post updated successfully!\");\n      } else {\n        // If updateId is null, it's a post operation\n        await axios.post(\"http://localhost:8002/users\", formdata);\n        alert(\"Post created successfully!\");\n      }\n      setRender(!render); // Toggle render to refresh user data\n      setInputs({\n        title: \"\",\n        des: \"\",\n        \n      });\n      \n      setUpdateId(null); // Reset updateId after operation\n    } catch (error) {\n      console.log(error);\n      alert(error);\n    }\n  };\n\n  \n  const handleDelete = async (id) => {\n    try {\n      await axios.delete(`http://localhost:8002/users/${id}`);\n      setRender(!render); // Refresh user data after deletion\n    } catch (error) {\n      console.log(error);\n      alert(error);\n    }\n  };\n\n  const handleUpdate = (id) => {\n    const updateUser = users.find(user => user._id === id);\n    // Set active to true if it's falsy\n    setInputs({\n      title: updateUser.title,\n      des: updateUser.des,\n      \n    });\n   // Update the image state as well\n    setUpdateId(id); // Set the ID of the post being updated\n  };\n\n  \n\n  return (\n    <div className=\"container\">\n      <h1 className='text-center text-3xl font-bold my-10  '   >Task Manager</h1>\n      <div className=\"row\">\n        <div className=\"col-md-6\">\n          <form onSubmit={handleSubmit} encType=\"multipart/form-data\">\n            <div className=\"mb-3\">\n              <label htmlFor=\"exampleInputEmail1\" className=\"form-label\">Title</label>\n              <input type=\"text\" value={inputs.title} onChange={(e) => setInputs({ ...inputs, [e.target.name]: e.target.value })} name=\"title\" className=\"form-control\" id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\" />\n            </div>\n            <div className=\"mb-3\">\n              <label htmlFor=\"exampleInputPassword1\" className=\"form-label  \">Description</label>\n              <textarea type=\"text\" value={inputs.des} onChange={(e) => setInputs({ ...inputs, [e.target.name]: e.target.value })} name='des' className=\"form-control\" id=\"exampleInputPassword1\" />\n            </div>\n            \n            \n            <button type=\"submit\" className=\"btn btn-primary\">{updateId ? 'Update' : 'Submit'}</button>\n          </form>\n        </div>\n    \n        <div className=\"col-md-6\">\n          <table className=\"table\">\n            <thead>\n              <tr>\n                <th scope=\"col\">Date</th>\n                <th scope=\"col\">Title</th>\n                <th scope=\"col\">Description</th>\n                <th scope=\"col\">Actions</th>\n              </tr>\n            </thead>\n            <tbody>\n              {users && users.map((user) => (\n                <tr key={user._id}>\n                  <td>{user.date}</td>\n                  <td>{user.title}</td>\n                  <td>{user.des}</td>\n                  \n                  <td>\n                    <button className=\"btn btn-danger\" onClick={() => handleDelete(user._id)}>Delete</button>\n                    <button className=\"btn btn-primary\" onClick={() => handleUpdate(user._id)}>Update</button>\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Blog;\n\n"]},"metadata":{},"sourceType":"module"}